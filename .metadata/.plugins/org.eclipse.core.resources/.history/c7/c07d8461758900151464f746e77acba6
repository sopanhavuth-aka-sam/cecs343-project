import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * 
 * @author sam
 *
 */
public class Controller {
	
	/**
	 * 
	 */
	private Board gameBoard;
	private Display gameDisplay;
	private Player human, ai1, ai2;
	private static final int TOTAL_ROOM = 21;

	/**
	 * 
	 */
	public Controller() {
		gameBoard = new Board();
		gameDisplay = new Display();
		human = new Player("Jimmy", 17, 6, 6, 6 , 6, 1, 1);
		ai1 = new Player("Mary", 17, 6, 6, 6, 6, 1, 2);
		ai2 = new Player("Tom", 17, 6, 6, 6, 6, 1, 3);

	
		updateConnectedRoomList();
		drawAllTokens();
		addListener();
		updateInfoPanel();
	}
	
	/**
	 * 
	 */
	public void drawAllTokens() {
		gameDisplay.drawToken(human.getName(), gameBoard.getPos(human.getLoc()), human.getDrawPos());
		gameDisplay.drawToken(ai1.getName(), gameBoard.getPos(ai1.getLoc()), ai1.getDrawPos());
		gameDisplay.drawToken(ai2.getName(), gameBoard.getPos(ai2.getLoc()), ai2.getDrawPos());
	}

	/**
	 * 
	 */
	public void clearAllTokens() {
		gameDisplay.clearAllTokens();
	}
	
	/**
	 * 
	 * @param name
	 * @return
	 */
	public int roomNameToLoc(String name) {
		for(int i=0; i<TOTAL_ROOM; i++) {
			if(name.equals(gameBoard.getName(i))) {
				return i;
			}
		}
		System.out.println("Error in RoomName to Loc in Controller Class");
		return -1;
	}
	
	/**
	 * 
	 */
	public void updateConnectedRoomList() {
		int[] newRoomList = gameBoard.getConnectedRoom(human.getLoc());
		String[] newRoomsStr = new String[newRoomList.length];
		for(int i=0; i<newRoomList.length; i++) {
			newRoomsStr[i] = gameBoard.getName(newRoomList[i]);
		}
		gameDisplay.updateRoomList(newRoomsStr);
	}
	
	public void updateName(){
		String[] player = {human.getName(), ai1.getName(), ai2.getName()};
		gameDisplay.updateName(player);
	}
	
	public void updateLearningPts(){
		int[] player = {human.getLearningPts(), ai1.getLearningPts(), ai2.getLearningPts()};
		gameDisplay.updateLearningPts(player);
	}
	
	public void updateCraftPts(){
		int[] player = {human.getCraftPts(), ai1.getCraftPts(), ai2.getCraftPts()};
		gameDisplay.updateCraftPts(player);
	}
	
	public void updateIntegrityPts(){
		int[] player = {human.getIntegrityPts(), ai1.getCraftPts(), ai2.getCraftPts()};
	}
	
	public void updateQP(){
		int[] player = {human.getQP(), ai1.getQP(), ai2.getQP()};
		gameDisplay.updateQP(player);
	}
	
	public void updatePlayerLoc(){
		int[] player = {human.getLoc(), ai1.getLoc(), ai2.getLoc()};
		gameDisplay.updatePlayerLoc(player);
	}
	
	public void updateInfoPanel(){
		updateLearningPts();
		updateCraftPts();
		updateQP();
		updatePlayerLoc();
	}
	
	/**
	 * 
	 */
	public void addListener() {
		gameDisplay.addListener( new ActionListener(){

			public void actionPerformed(ActionEvent e) {
				
				//get Human player's new room number.
				int newLoc = roomNameToLoc(gameDisplay.getSelectedRoom());
				//update human player's loc
				human.setLoc(newLoc);
				//update and redraw map
				clearAllTokens();
				drawAllTokens();
				//update connected rooms list(JList)
				updateConnectedRoomList();
			}
			
		});
	}
}
