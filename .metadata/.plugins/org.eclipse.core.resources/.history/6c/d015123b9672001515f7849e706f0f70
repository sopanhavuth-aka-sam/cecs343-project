import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class InfoPane extends JPanel {

	private JButton drawCardBtn, moveBtn, playCardBtn;
	private JList connectedRoomList;
	private String[] roomName;
	private JPanel panel;
	private JTextArea areaEN;
	private JTextArea areaES;
	private JTextArea areaWS;
	private JLabel labelENCWN;
	private JLabel labelENCWC;

	public InfoPane() {
		view();

	}

	public void view() {
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		int height = (int) screenSize.getHeight();
		height = height - (int) (height / 1.43);
		int width = (int) screenSize.getWidth();
		setLayout(new BorderLayout());
		setPreferredSize(new Dimension(width, height));

		// East
		JPanel panelEast = new JPanel();
		this.add(panelEast, BorderLayout.EAST);
		panelEast.setLayout(new BorderLayout());
		
		// East-North
		JPanel panelEN = new JPanel();
		panelEast.add(panelEN, BorderLayout.NORTH);
		panelEN.setLayout(new FlowLayout());
		/*areaEN = new JTextArea();
		areaEN.setText("\t" + "Learning\t" + "Craft\t" + "Integrity\t" + "Quality Points\n");
		areaEN.append("Matt\t" + "6\t" + "6\t" + "6\t" + "0\n");
		areaEN.append("Amanda\t" + "6\t" + "6\t" + "6\t" + "0\n");
		areaEN.append("Habib\t" + "6\t" + "6\t" + "6\t" + "0\n");
		areaEN.append("\n\nCards in deck: " + "34");
		//areaEN.append("\n\n);
		areaEN.setEditable(false);
		areaEN.setLineWrap(true);
		areaEN.setWrapStyleWord(true);
		areaEN.setPreferredSize(new Dimension(800, 150));
		*/
		
		Color white = new Color(255, 255, 255);
		
		JTable table; 
		String[] column = {" ", "Learning", "Craft", "Integrity", "Quality Points"};
		Object[][] data = {{" ", "Learning", "Craft", "Integrity", "Quality Points"},
				           {"Matt", "6", "6", "6", "0"},
						   {"Amanda", "6", "6", "6", "0"}, 
						   {"Habib", "6", "6", "6", "0"}
						   };
		table = new JTable(data, column);
		table.setShowGrid(false);
		table.setIntercellSpacing(new Dimension(0,0));
		table.setBackground(white);
		table.setPreferredSize(new Dimension(800, 150));
		//areaEN.add(table);
		
		panelEN.add(table);
		
		
		// East-South
		JPanel panelES = new JPanel();
		panelEast.add(panelES, BorderLayout.SOUTH);
		panelES.setLayout(new FlowLayout());
		areaES = new JTextArea();
		areaES.setEditable(false);
		areaES.setLineWrap(true);
		areaES.setWrapStyleWord(true);
		areaES.setPreferredSize(new Dimension(800, 60));
		
		JScrollPane scroll = new JScrollPane(areaES);
		scroll.setPreferredSize(new Dimension(800,60));
		panelES.add(scroll);

		// Center
		JPanel panelCenter = new JPanel();
		this.add(panelCenter, BorderLayout.CENTER);
		panelCenter.setLayout(new BorderLayout());
		
		JPanel panelCF = new JPanel();
		panelCenter.add(panelCF);
		panelCF.setLayout(new FlowLayout());
		
		JTextArea areaC = new JTextArea();
		areaC = new JTextArea();
		areaC.setEditable(false);
		areaC.setLineWrap(true);
		areaC.setWrapStyleWord(true);
		areaC.setPreferredSize(new Dimension(200, 200));
		panelCF.add(areaC, BorderLayout.WEST);

		// West
		JPanel panelWest = new JPanel();
		this.add(panelWest, BorderLayout.WEST);
		panelWest.setLayout(new BorderLayout());
		
		// West-South
		JPanel panelWS = new JPanel();
		panelWest.add(panelWS, BorderLayout.SOUTH);
		panelWS.setLayout(new FlowLayout());
		areaWS = new JTextArea();
		areaWS.setEditable(false);
		areaWS.setLineWrap(true);
		areaWS.setWrapStyleWord(true);
		areaWS.setPreferredSize(new Dimension(170, 120));
		panelWS.add(areaWS);
		

		// West-North
		JPanel panelWN = new JPanel();
		panelWest.add(panelWN, BorderLayout.WEST);
		panelWN.setLayout(new FlowLayout());
		
		JPanel panelWNG = new JPanel();
		panelWN.add(panelWNG);
		panelWNG.setLayout(new GridLayout(3, 1, 0, 5));

		drawCardBtn = new JButton("Draw Card");
		panelWNG.add(drawCardBtn);

		moveBtn = new JButton("Move");
		panelWNG.add(moveBtn);

		playCardBtn = new JButton("Play Card");
		panelWNG.add(playCardBtn);

		/*
		 * // East-North JPanel panelEN = new JPanel(); panelEast.add(panelEN,
		 * BorderLayout.NORTH);    labelENCWN = new
		 * JLabel("Cards in Deck: " + "3" + "/t/tDiscards out of play: " + "0");
		 * labelENCWC = new JLabel("You are " + "Amanda" + "and you are in " +
		 * "ECS 308");
		 * 
		 * areaEN = new JTextArea(); areaEN.setEditable(false);
		 * areaEN.setLineWrap(true); areaEN.setWrapStyleWord(true);
		 * areaEN.add(table, BorderLayout.NORTH);
		 * 
		 * 
		 * // East-North-Center JPanel panelENC = new JPanel();
		 * //panelEN.add(panelENC, BorderLayout.CENTER);
		 * 
		 * // East-North-Center-West JPanel panelENCW = new JPanel();
		 * panelENC.add(panelENCW, BorderLayout.WEST); panelENCW.add(labelENCWN,
		 * BorderLayout.NORTH); panelENCW.add(labelENCWC, BorderLayout.CENTER);
		 * areaEN.add(panelENC, BorderLayout.CENTER); panelEN.add(areaEN,
		 * BorderLayout.CENTER); //panelENCW.add(new JLabel("Cards in Deck: " +
		 * "3" + "/t/tDiscards out of play: " + "0"), BorderLayout.NORTH);
		 * //panelENCW.add(new JLabel("You are " + "Amanda" + "and you are in "
		 * + "ECS 308"), BorderLayout.CENTER);
		 * 
		 * // East-South JPanel panelES = new JPanel(); areaES = new JTextArea(
		 * "Human player" + "is" + "Amanda"); areaES.setEditable(false);
		 * areaES.setLineWrap(true); areaES.setWrapStyleWord(true); JScrollPane
		 * scroll = new JScrollPane(areaES); panelEast.add(panelES,
		 * BorderLayout.SOUTH); panelES.add(scroll);
		 */
		// Center-East
		JPanel panelCE = new JPanel();
		// panelCenter.add(panelCE, BorderLayout.EAST);
		panelCE.add(new JLabel(new ImageIcon("")));

		// Center-North
		JPanel panelCN = new JPanel();
		panelCenter.add(panelCN, BorderLayout.NORTH);

		// Center-North-west
		// JPanel panelCNW = new JPanel();

		// panelCN.add(panelCNW, BorderLayout.WEST);
		// panelCenter.add(panelCN, BorderLayout.NORTH);

		// JPanel panelCC = new JPanel();

		roomName = new String[] { "test1", "test2" }; // update string[] after
														// very move;
		connectedRoomList = new JList(roomName);
	}
}
